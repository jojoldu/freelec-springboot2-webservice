buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
        // springBootVersion 를 전역변수로 생성
        // 그 값을 2.1.9.RELEASE 로 하겠다는 의미
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 선언한 플러그인 의존성들을 적용할 것인지 결정하는 코드
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// io.spring.dependency-management 플러그인은 스프링 부트의 의존성들을 관리해 주는 플러그인
// 그래서 반드시 필요로한 플러그인이다.

group 'com.jojoldu.book'
version '1.0.4-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8   

repositories { //    각종 의존성들을 어떤 원격 저장소에서 받을 지 정한다.
    mavenCentral()
//    mavenCentral는 이전부터 많이 사용하는 저장소
//    본인이 만든 라이브러리를 업로드 하기 위해선 많은 과정과 설정이 필요하다.
    jcenter()
//    이런문제때문에 라이브러리 업로드를 간단하게 하기 ㅜ이한 jcenter 가 나왔다.
}

dependencies {
    implementation 'junit:junit:4.13.1'

//    프로젝트 개발에 필요한 의존성들을 선언하는곳
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('com.h2database:h2')

    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')

    compile("org.mariadb.jdbc:mariadb-java-client")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")
}

/*
1. spring-boot-starter-data-jpa
- 스프링 부트용 Spring Data Jpa 추상화 라이브러리이다.
- 스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전을 관리해 준다.

2. h2
- 인메모리 관계형 데이터베이스이다.
- 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리할 수 있다.
- 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용된다.
- JPA 의 테스트, 로컬 환경에서의 구동에서 사용할 예정
 */
